<template>
  <div class="order-list">
    <el-form label-width="80px">
      <el-row>
        <el-col :span="5">
          <el-form-item label="订单状态" placeholder="请选择">
            <el-select v-model="orderState">
              <el-option
                label="全部"
                value="">
              </el-option>
              <el-option v-for="item in statusList"
                         :label="item.value"
                         :value="item.label"
                         :key="item.lable"
              ></el-option>
            </el-select>
          </el-form-item>
        </el-col>
        <el-col :span="12">
          <el-form-item>
            <el-date-picker
              v-model="date"
              type="daterange"
              range-separator="至"
              start-placeholder="开始日期"
              end-placeholder="结束日期"
              format="yyyy-MM-dd"
              value-format='yyyy-MM-dd'>
            </el-date-picker>
          </el-form-item>
        </el-col>
      </el-row>
      <el-row>
        <el-col :span="4">
          <el-form-item label="订单号">
            <el-input v-model="orderNum"></el-input>
          </el-form-item>
        </el-col>
        <el-col :span="4">
          <el-form-item label="手机号">
            <el-input v-model="contactMobile"></el-input>
          </el-form-item>
        </el-col>
        <el-col :span="4">
          <el-form-item label="姓名">
            <el-input v-model="checkinPerson"></el-input>
          </el-form-item>
        </el-col>
        <!-- <el-col :span="4">
          <el-form-item label="经手人">
            <el-input v-model="handleMan"></el-input>
          </el-form-item>
        </el-col> -->
        <el-col :span="5">
          <el-form-item>
            <el-button size="small" type="primary" v-on:click="search">查询</el-button>
            <el-button type="text" v-on:click="resetForm">重置条件</el-button>
          </el-form-item>
        </el-col>
      </el-row>
    </el-form>
    <el-table
      :data="tableData"
      :height="height"
      style="width: 100%">
      <el-table-column
        label="订单号">
        <template slot-scope="scope">
          <p>{{scope.row.orderNum}}</p>
          <p>{{scope.row.orderTime}}</p>
        </template>
      </el-table-column>
      <el-table-column
        label="房型">
        <template slot-scope="scope">
          <p>{{scope.row.hotelGoods.goodsName}}</p>
          <p>{{scope.row.goodsNum}}间</p>
        </template>
      </el-table-column>
      <el-table-column
        label="入离时间">
        <template slot-scope="scope">
          <p>{{scope.row.comeTime}}日-{{scope.row.leaveTime}}日</p>
          <p>{{scope.row.days}}晚</p>
        </template>
      </el-table-column>
      <el-table-column
        label="付款信息">
        <template slot-scope="scope">
          <p>￥{{scope.row.orderMoney}}</p>
          <p
            :class="{error:scope.row.payState === 0 || scope.row.payState === 1002, success:scope.row.payState === 1 || scope.row.payState === 1001}">
            {{scope.row.payStateStr}}</p>
        </template>
      </el-table-column>
      <el-table-column
        prop="checkinPerson"
        label="入住人">
      </el-table-column>
      <el-table-column
        prop="arriveTime"
        label="到店时间">
      </el-table-column>
      <el-table-column
        prop="remark"
        label="特殊要求">
      </el-table-column>
      <el-table-column
        label="订单状态">
        <template slot-scope="scope">
          <span>{{scope.row.statusText}}</span>
        </template>
      </el-table-column>
      <el-table-column
        label="操作">
        <template slot-scope="scope">
          <el-button type="text" v-on:click="checkDetail(scope.row.orderId)">查看详情</el-button>
        </template>
      </el-table-column>
    </el-table>
    <el-pagination
      @size-change="handleSizeChange"
      @current-change="handleCurrentChange"
      :current-page="pageNum"
      :page-sizes="[10, 15, 20, 30]"
      :page-size="pageSize"
      :page-count="pageCount"
      layout="total, sizes, prev, pager, next, jumper"
      :total="total">
    </el-pagination>
  </div>
</template>

<script>
  import { formatDate } from '@/config/mUtils'
  import { getOrderList, getOrderStatusList, readMessage } from '@/api/getData'

  export default {
    data () {
      return {
        type: '',
        shopId: '',
        statusList: [],
        date: [],
        status: '',
        orderNum: '',
        orderState: '',
        contactMobile: '',
        checkinPerson: '',
        handleMan: '',
        pageNum: 1,
        pageSize: 10,
        height: 400,
        total: 0,
        list: []
      }
    },
    computed: {
      tableData () {
        let arr = this.list.map(item => {
          item.orderTime = formatDate(item.orderTime, 'MM月DD日 HH:MM')
          item.days = formatDate(item.leaveTime).day - formatDate(item.comeTime).day
          item.comeTime = formatDate(item.comeTime).day
          item.leaveTime = formatDate(item.leaveTime).day
          item.userName = '周杰伦'
          if (item.arriveTime) {
            item.arriveTime = formatDate(item.arriveTime, 'HH:MM')
          }
          switch (item.orderState) {
            case 101:
              item.statusText = '待付款'
              break
            case 201:
              item.statusText = '已付款'
              break
            case 301:
              item.statusText = '已入住'
              break
            case 401:
              item.statusText = '已评价'
              break
            case 402:
              item.statusText = '未评价'
              break
            default:
              item.statusText = '已取消'
          }
          switch (item.payState) {
            case 0:
              item.payStateStr = '未付款'
              break
            case 1:
              item.payStateStr = '已付款'
              break
            case 1001:
              item.payStateStr = '已退款'
              break
            case 1002:
              item.payStateStr = '退款失败'
              break
          }
          return item
        })
        return arr
      }
    },
    mounted: function () {
      this.$nextTick(() => {
        this.getValue()
      })
    },
    methods: {
      getValue: function () {
        this.type = this.$route.query.order
        console.log(this.type)
      },
      search () {
        let startTime = ''
        let endTime = ''
        if (this.date) {
          startTime = this.date[0]
          endTime = this.date[1]
        }
        getOrderList(this.orderState, this.shopId, startTime, endTime, this.orderNum, this.contactMobile, this.handleMan, this.checkinPerson, this.pageNum, this.pageSize).then(res => {
          this.list = res.data.data
          this.pageNum = res.data.pageIndex
          this.total = res.data.totalNum
        })
      },
      handleSizeChange (val) {
        this.pageSize = val
        this.search()
      },
      handleCurrentChange (val) {
        this.pageNum = val
        this.search()
      },
      resetForm () {
        this.date = []
        this.orderNum = ''
        this.contactMobile = ''
        this.checkinPerson = ''
        this.handleMan = ''
      },
      setOrderStatusList () {
        getOrderStatusList().then(res => {
          if (res.data.state === 1) {
            this.statusList = res.data.data
          } else {
            throw new Error(res.data.message)
          }
        })
      },
      checkDetail (orderId) {
        this.$router.push({path: 'orderDetail', query: {orderId}})
      }
    },
    created () {
      this.shopId = this.$store.state.hotelId
      this.setOrderStatusList()
      this.search()
      this.height = document.documentElement.clientHeight * 0.55
    },
    watch: {
      type: function () {
        readMessage(this.shopId, this.type)
      }
    }
  }
</script>

<style lang="less">
  .order-list {
    background-color: #fff;
    padding: 40px 10px 60px 10px;
    border-radius: 5px;
  }

  .error {
    color: red;
  }

  .success {
    color: green;
  }

  .info {
    color: yellow;
  }
</style>
